- name: Install Java package
  apt:
    name: openjdk-8-jdk
    state: present
    update_cache: yes

- name: Create user for Kafka
  user:
    name: kafka
    shell: /bin/nologin

- name: Create user for Zookeeper
  user:
    name: zookeeper
    shell: /bin/nologin

- name: Check Kafka is exist
  stat:
    path: '/opt/{{ kafka_distr }}'
  register: kafka_exists

- name: Install Kafka
  block:
    - name: Download Kafka distibution
      get_url: 
        url: '{{ kafka_url }}'
        dest: /tmp

    - name: Unpacking archive with Kafka distribution
      unarchive:
        src: /tmp/{{ kafka_archive }}
        dest: /opt
        group: '{{ zookeeper_group }}'
        owner: '{{ zookeeper_user }}'
        remote_src: yes

    - name: Delete archive with Kafka distribution
      file:
        path: '/tmp/{{ kafka_archive }}'
        state: absent

    - name: Create symlink for install Kafka
      file:
        src: '/opt/{{ kafka_distr }}'
        dest: /opt/kafka
        state: link
        group: '{{ kafka_group }}'
        owner: '{{ kafka_user }}'
  when: kafka_exists.stat.exists == false

- name: Create symlink for install Kafka
  file:
    src: '/opt/{{ kafka_distr }}'
    dest: /opt/kafka
    state: link
    group: '{{ zookeeper_group }}'
    owner: '{{ zookeeper_user }}'

- name: Create user for kafka
  user:
    name: kafka
    shell: /bin/nologin

- name: Create user fo zookeeper
  user:
    name: zookeeper
    shell: /bin/nologin

- name: Create topic logs directory for Kafka
  file:
    path: /tmp/lib/kafka/kafka-logs
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755

- name: Create var/lib directory for Kafka
  file:
    path: /var/lib/kafka
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755

- name: Create var/log directory for Kakfa
  file:
    path: /var/log/kafka
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755

- name: Create var/lib directory for Zookeeper
  file:
    path: /var/lib/zookeeper
    state: directory
    group: '{{ zookeeper_group }}'
    owner: '{{ zookeeper_user }}'
    mode: 0755

- name: Create var/log directory for Zookeeper
  file:
    path: /var/log/zookeeper
    state: directory
    group: '{{ zookeeper_group }}'
    owner: '{{ zookeeper_user }}'
    mode: 0755

- name: configure systemd zookeeper
  template:
    src: zookeeper.service.j2
    dest: /lib/systemd/system/zookeeper.service
    group: '{{ zookeeper_group }}'
    owner: '{{ zookeeper_user }}'
    mode: 0755
  # notify: Restart Zookeeper service

- name: configure systemd kafka
  template:
    src: kafka.service.j2
    dest: /lib/systemd/system/kafka.service
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755
  # notify: Restart Kafka service

- name: Restart Zookeeper service
  service:
      name: zookeeper
      state: started
      enabled: true 
  become: yes

- name: Wait for Zookeeper to start
  pause:
    seconds: 5

- name: Restart Kafka service
  service:
      name: kafka
      state: started
      enabled: true
  become: yes